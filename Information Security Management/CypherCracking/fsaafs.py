import binascii

def xor_bytes(a, b):
    """XOR two byte sequences of equal length"""
    return bytes(x ^ y for x, y in zip(a, b))

def hex_to_bytes(hex_str):
    """Convert hex string to bytes"""
    return binascii.unhexlify(hex_str)

def analyze_ciphertexts(ciphertexts):
    """Find similarities by XOR-ing all ciphertext pairs"""
    for i in range(len(ciphertexts)):
        for j in range(i + 1, len(ciphertexts)):
            xor_result = xor_bytes(ciphertexts[i], ciphertexts[j])
            print(f"XOR C{i} âŠ• C{j}: {xor_result}")

# Given ciphertexts in hex
cipher_hex_strings = [
    "5d1450000d434448550b165e0343470b4c0a1745470b5354525d1748",
    "435154094d13014e55161f500907494256075251464450185f5f06044f1a",
    "5d5a18081813064d430d08571510101b57171745470141594555440059461440095d14455c554c4000521000534b",
    "555a5c45185c114c58440f41460d5f425f175647540a455d52100b00165d5a5a0e4e55445b5f5a1e",
    "5d52181c0e46445b510a4146461742174b1617541517465144434404575a5f51131414475a5140171611100d5245470a1409051950565b5216105f5d",
    "5c5d4a00415e01185f1646540f115542550719155c10164b17550a125f4651581818414012445b101c5e114b",
    "58514c4212130757450a1212120c1016501052501b444857421007075814505b414c5c51461c1453045f4311171c5f105904415e465716565800100345405900595d4b115d444546105e0a1010571d5907425540455b0a410a10415b591719110f43455a425e",
    "5c5d4b110e411d185917081512435b0b560617415a445c5d5910130e59144458004114575d541a",
    "435154094159114b4444015d031010165742445d5a131d18595f44095851134741515a54574340421052100c5509554b",
    "5d13540941570b18510a1f460e0a5e05180458471505114f585d050816435d4009185510595e5d56001f",
    "405c5d1704141718514415531f0a5e05180b5915500a5654565e005c16435c51135d14445a554655424244165a0a5b004a451551564b53104544560b175716135512045d58100a544655450b4540454b01554b5c114b4c131406155c4d1741110259015d11151502514413155d174a5714134b154d53161b",
    "405c5911415f054b44440e530807100c5d0345594c445a515b5c01021659511a",
    "475b181c0e46444f510a12120b06101657425550150c505451100909585f18140959585612585d4408500a4b",
    "435154094d130d185c0d0d5746175f425c0d17465a09541843580d0851471440095d145f5e54195604420c0c580b5501461200401d",
    "5d144c0d0e4603504444055a140a4316550344155a0a5d4117530b0b5347145b0f5b511053104d5504434a",
    "405c59114640445245171212071010005906175446445d51444401085f5a5314155714445a55145200501009521610120f110956464d165257165d1703544b4a",
    "5514550413470d56594a46410e025b07564e175b5a10114b4359161453501a"
]

# Convert to bytes
ciphertexts = [hex_to_bytes(c) for c in cipher_hex_strings]

# Analyze for similarities
analyze_ciphertexts(ciphertexts)
